[{"/Users/dimad./Desktop/react-mesto-auth/src/index.js":"1","/Users/dimad./Desktop/react-mesto-auth/src/reportWebVitals.js":"2","/Users/dimad./Desktop/react-mesto-auth/src/components/App.js":"3","/Users/dimad./Desktop/react-mesto-auth/src/components/Main.js":"4","/Users/dimad./Desktop/react-mesto-auth/src/components/Footer.js":"5","/Users/dimad./Desktop/react-mesto-auth/src/components/ImagePopup.js":"6","/Users/dimad./Desktop/react-mesto-auth/src/components/AddPlacePopup.js":"7","/Users/dimad./Desktop/react-mesto-auth/src/components/Login.js":"8","/Users/dimad./Desktop/react-mesto-auth/src/components/Register.js":"9","/Users/dimad./Desktop/react-mesto-auth/src/components/InfoTooltip.js":"10","/Users/dimad./Desktop/react-mesto-auth/src/components/ProtectedRoute.js":"11","/Users/dimad./Desktop/react-mesto-auth/src/components/EditProfilePopup.js":"12","/Users/dimad./Desktop/react-mesto-auth/src/components/EditAvatarPopup.js":"13","/Users/dimad./Desktop/react-mesto-auth/src/components/Header.js":"14","/Users/dimad./Desktop/react-mesto-auth/src/utils/api.js":"15","/Users/dimad./Desktop/react-mesto-auth/src/utils/auth.js":"16","/Users/dimad./Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js":"17","/Users/dimad./Desktop/react-mesto-auth/src/components/Card.js":"18","/Users/dimad./Desktop/react-mesto-auth/src/components/PopupWithForm.js":"19"},{"size":646,"mtime":1695383685191,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1690358260000,"results":"22","hashOfConfig":"21"},{"size":6881,"mtime":1695395741838,"results":"23","hashOfConfig":"21"},{"size":2176,"mtime":1690358260000,"results":"24","hashOfConfig":"21"},{"size":166,"mtime":1694937223726,"results":"25","hashOfConfig":"21"},{"size":693,"mtime":1690358260000,"results":"26","hashOfConfig":"21"},{"size":1783,"mtime":1690358260000,"results":"27","hashOfConfig":"21"},{"size":992,"mtime":1695393336231,"results":"28","hashOfConfig":"21"},{"size":1248,"mtime":1695392361228,"results":"29","hashOfConfig":"21"},{"size":1178,"mtime":1695396473060,"results":"30","hashOfConfig":"21"},{"size":570,"mtime":1695384632948,"results":"31","hashOfConfig":"21"},{"size":2138,"mtime":1690358260000,"results":"32","hashOfConfig":"21"},{"size":1016,"mtime":1690358260000,"results":"33","hashOfConfig":"21"},{"size":939,"mtime":1695395115877,"results":"34","hashOfConfig":"21"},{"size":2347,"mtime":1690358260000,"results":"35","hashOfConfig":"21"},{"size":902,"mtime":1695391683398,"results":"36","hashOfConfig":"21"},{"size":83,"mtime":1690358260000,"results":"37","hashOfConfig":"21"},{"size":1236,"mtime":1690358260000,"results":"38","hashOfConfig":"21"},{"size":1121,"mtime":1695385430385,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"134etsf",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dimad./Desktop/react-mesto-auth/src/index.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/reportWebVitals.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/App.js",["99","100","101","102","103"],[],"import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport * as auth from \"../utils/auth\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\n\n\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardClick, setIsDeleteCardClick] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isCardLikeClick, setIsCardLikeClick] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [status, setStatus] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch(console.error)\n    api.getUserProfile()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(console.error)\n  }, [])\n  \n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function tokenCheck() {\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\");\n      console.log(jwt);\n      if (jwt) {\n        auth\n          .tokenCheck(jwt)\n          .then((res) => {\n            if (res) {\n              setEmail(res.data.email);\n              setLoggedIn(true);\n              navigate(\"/\");\n            }\n          })\n          .catch((err) => {\n            localStorage.removeItem('jwt');\n            console.log(err);\n            navigate(\"/sign-in\");\n          });\n      }\n    }\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleDeleteCardClick() {\n    setIsDeleteCardClick(true);\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    api.addNewCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopup();\n      })\n      .catch(console.error)\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке \n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки \n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(console.error);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api.setUserProfile(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopup();\n      })\n      .catch(console.error)\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api.setUserAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopup();\n      })\n      .catch(console.error);\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then((res) => {\n        setCards((state) => state.filter((item) => item._id !== card._id));\n      })\n      .catch(console.error)\n  }\n\n  function handleLogin(email, password) {\n    auth\n      .loginUser(email, password)\n      .then((res) => {\n        if (res) {\n          localStorage.setItem(\"jwt\", res.token);\n          tokenCheck();\n          console.log(loggedIn);\n          navigate('/', { replace: true });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInfoTooltipOpen(true);\n        setStatus(false);\n        navigate('/sign-in', { replace: true });\n      });\n  }\n  function handleRegister(email, password){\n    auth.registerUser(email, password)\n      .then((res) => {\n        if (res) {\n          setIsInfoTooltipOpen(true);\n          setStatus(true);\n          console.log(loggedIn);\n          navigate('/', { replace: true });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInfoTooltipOpen(true);\n        setStatus(false);\n      });\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n  }\n\n  function closeAllPopup() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n      <Header loggedIn={loggedIn} email={email} onSignOut={handleSignOut} />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<ProtectedRoute\n              element={Main}\n              loggedIn={loggedIn}\n              cards={cards}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />}\n          />\n          <Route path=\"/sign-up\" element={\n            <Register onRegister={handleRegister} />} \n          />\n          <Route path=\"/sign-in\" element={\n            <Login onLogin={handleLogin} />}\n          />\n        </Routes>\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopup}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopup}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopup}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopup}\n        />\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopup}\n          status={status}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n\n}\n\n\n\nexport default App; ","/Users/dimad./Desktop/react-mesto-auth/src/components/Main.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Footer.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/ImagePopup.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Login.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Register.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/InfoTooltip.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/ProtectedRoute.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/EditProfilePopup.js",["104"],[],"import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [props.isOpen]);\n  function handleSetName(e) {\n    setName(e.target.value);\n  }\n  function handleSetDescription(e) {\n    setDescription(e.target.value);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n  return (\n    <PopupWithForm\n      title=\"Редактировать данные\"\n      name=\"profile\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      buttonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input profile-popup__input profile-popup__input_type_name\"\n        name=\"popupName\"\n        placeholder=\"Имя\"\n        minLength={2}\n        maxLength={40}\n        required=\"\"\n        value={name || ''}\n        onChange={handleSetName}\n      />\n      <span className=\"name-input-error\" />\n      <input\n        id=\"job-input\"\n        type=\"text\"\n        className=\"popup__input profile-popup__input profile-popup__input_type_job\"\n        name=\"popupJob\"\n        placeholder=\"О себе\"\n        minLength={2}\n        maxLength={200}\n        required=\"\"\n        value={description || ''}\n        onChange={handleSetDescription}\n      />\n      <span className=\"job-input-error\" />\n    </PopupWithForm>\n\n  );\n}\nexport default EditProfilePopup;","/Users/dimad./Desktop/react-mesto-auth/src/components/EditAvatarPopup.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Header.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/utils/api.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/utils/auth.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Card.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/PopupWithForm.js",[],[],{"ruleId":"105","severity":1,"message":"106","line":26,"column":10,"nodeType":"107","messageId":"108","endLine":26,"endColumn":27},{"ruleId":"105","severity":1,"message":"109","line":29,"column":10,"nodeType":"107","messageId":"108","endLine":29,"endColumn":25},{"ruleId":"105","severity":1,"message":"110","line":29,"column":27,"nodeType":"107","messageId":"108","endLine":29,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":52,"column":6,"nodeType":"113","endLine":52,"endColumn":8,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":90,"column":12,"nodeType":"107","messageId":"108","endLine":90,"endColumn":33},{"ruleId":"111","severity":1,"message":"116","line":18,"column":6,"nodeType":"113","endLine":18,"endColumn":20,"suggestions":"117"},"no-unused-vars","'isDeleteCardClick' is assigned a value but never used.","Identifier","unusedVar","'isCardLikeClick' is assigned a value but never used.","'setIsCardLikeClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'handleDeleteCardClick' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.about' and 'currentUser.name'. Either include them or remove the dependency array.",["119"],{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [tokenCheck]",{"range":"124","text":"125"},"Update the dependencies array to be: [currentUser.about, currentUser.name, props.isOpen]",{"range":"126","text":"127"},[1761,1763],"[tokenCheck]",[563,577],"[currentUser.about, currentUser.name, props.isOpen]"]